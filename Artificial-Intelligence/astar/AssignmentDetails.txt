Path Finding with Intelligent Monster Avoidance

Write a program to simulate path finding in a 2D game simulation using  java.

 

Programs must compile and run at the command line using:

javac  *.java

java astar

I will not be installing any extras software, IDEs such as eclipse, netbeans, jcreator to run your programs.  Note that your main class needs to be called astar (all lowercase).

 

Overview:  Super Scandro is a hero in video game with long flowing rock star hair.    Super Scandro starts at his garage and his goal is to get to the Justin Bieber concert.  The map consists of obstacles blocking Super Scandro where he cannot proceed (walls).  Additionally, there are barbers on the map that will cut his long flowing hair if he gets too close.  Your job is to find the short path that will not get Super Scandro's hair cut.  Super Scandro must therefore avoid barbers and walls.  The obstacles (walls) on the map will not change through out the simulation.  However,  The barbers can move about the screen through time.

Super Scandro can move up down right or left (no diagonal movements).

Barbers can move about the map 1 space per time step.  There may be several barbers on the screen.   Barbers can stop on a square also.

Time step - A time step is a time increment where Super Scandro and/or Barbers can move.  

Compute  your paths in real time.  That is, do not analyze the entire file and find out where the Barbers will be located.  You need to compute the path at each time step. 

Suggestions for algorithm-

Compute path each time step.  The sample in class computes 1 path because the environment does not change.  You can compute the best path that avoids barbers (treat barbers as walls).  Once the path is computed move Super Scandro one block.  Then repeat entire process for Super Scandro's new location.  So essentially you are performing these steps:

 

Computing the best path examining location of obstacles and barbers
Move Super Scandro 1 step
Repeat
For clarity:

Time 0, Examine map, compute path, move Scandro,  display map

Time 1, Examine map, compute path, move Scandro, display map

Time 2, Examine map, compute path, move Scandro, display map

etc.

 

For consistency within our class, when you examine adjacent squares examine the squares in this order up,down,right,left. 

----------------

Map File-  Your program should read in the map file with the following format  The map files will have only Map Size, Walls, Start, Goal.  The map size will always be the first record  in the file.  The start location will always be the second record.  The goal will be the third record.  The remainder of the file will have n Wall records.  An E will signify the end of the file.  Assume that files are in the correct format and there are no illegal start nodes, end nods or walls.

 

Simulation Format
M- Map Size followed by X,Y coordinate:   Eg:  M 6 8
S- Start location followed by X,Y coordinate: Eg: S 2 3
W- Wall followed by XY coordinate:             Eg:  W 2 3
E- End of file
All X Y coordinates start at index of 0.  The smallest X coordinate is at the left of the screen.  The smallest Y coordinate is at the top of the screen.

The general format for the file is as follows:

M NumberOfX NumberOfY
S X Y
G X Y
W X Y
W X Y
W X Y
W X Y
W X Y
W X Y

...

E
 

 


Example Map File:  This makes an 8X8 screen so the indices are 0..7
 

M 8 8
S 0 2
G 5 6
W 2 3
W 2 4
W 2 5
W 2 6
E

Barber File- The barber file shows where the Barbers are at time steps.  There are no rules for Barbers positions during time.  Barbers may appear to walk.  Barbers may appear and disappear.  Barbers may jump across the screen.  Time steps start at 0.  Barbers will only be on the screen with time steps specified in the file.  If you are at time=5 in your simulation and there is no records in the file at time=5, assume the barbers have disappeared.  The barber file will have the following file format:

TimeStep  X Y
TimeStep  X Y
TimeStep  X Y
-1

Example Barber Files:

Walking Barbers:

0 3 4
0 5 4
1 3 5
1 5 5
2 3 6
2 5 6
3 3 7
3 5 7
-1
Walking and stopping Barbers:

0 3 4
0 5 4
1 3 5
1 5 5
2 3 5
2 5 5
3 3 5
3 5 5
-1
Disappearing and Reappearing Barbers: (Note if a barber "appears" on the current location where Super Smiga is located, you may ignore this and not "kill" Scandro.

0 3 4
0 5 4
3 3 5
3 5 5
-1
Input:  Prompt the user for two files in this order: mapfile then barberfile.  Only one map file and one barber file will be used.  Your program must have no other input. 

Output: Display a graphical representation of the path that your Super Scandro travels during each time step.  Display the walls.   Display the barbers at each time step.  Use the following text values:
Scandro:  S
Walls:    W
Barbers: B
Path: *   (Show a path from Scandro's CURRENT location to the goal)

Display the current timestep somewhere on the screen:  Time = 0, Time =1, etc.  Your final timestep should show how long it took to get Super Scandro to his goal.  If at any point you discover there is no path to the end, display "NO PATH."  Do not wait around several time steps to see if the barbers decide to move.


 

Run your program three times using the input files below.  

Test 1:    barbercup.txt mapcup.txt

Test 2:  barbergoaround.txt mapgoaraound.txt

Test 3: barbergoaroundfake.txt mapgoaraoundfake.txt